diff --git a/config.c b/config.c
index b200549..a69f152 100644
--- a/config.c
+++ b/config.c
@@ -1637,7 +1637,9 @@ duperror:
 						newlog->olddirUid, newlog->olddirGid)) {
 						return 1;
 					}
-					stat(dirName, &sb);
+					if (stat(dirName, &sb)) {
+						return 1;
+					}
 				}
 				else {
 					message(MESS_ERROR, "%s:%d error verifying olddir "
diff --git a/logrotate.c b/logrotate.c
index f188c55..52cce52 100644
--- a/logrotate.c
+++ b/logrotate.c
@@ -208,8 +208,10 @@ static struct logState *newState(const char *fn)
 	if ((new = malloc(sizeof(*new))) == NULL)
 		return NULL;
 
-	if ((new->fn = strdup(fn)) == NULL)
+	if ((new->fn = strdup(fn)) == NULL) {
+		free(new);
 		return NULL;
+	}
 
 	new->doRotate = 0;
 
@@ -1649,6 +1651,7 @@ static int writeState(char *stateFilename)
 		    if (selinux_enforce) {
 				freecon(oldContext);
 				free(tmpFilename);
+                close(fdcurr);
 				return 1;
 		    }
 		}
@@ -1659,6 +1662,7 @@ static int writeState(char *stateFilename)
 			if (selinux_enforce) {
 				freecon(oldContext);
 				free(tmpFilename);
+                close(fdcurr);
 				return 1;
 		    }
 		}
@@ -1670,6 +1674,7 @@ static int writeState(char *stateFilename)
 				    tmpFilename, strerror(errno));
 			    if (selinux_enforce) {
 					free(tmpFilename);
+                    close(fdcurr);
 				    return 1;
 			    }
 		    }
@@ -1682,13 +1687,17 @@ static int writeState(char *stateFilename)
 			message(MESS_ERROR, "getting file ACL %s: %s\n",
 				stateFilename, strerror(errno));
 			close(fdcurr);
+            free(tmpFilename);
 			return 1;
 		}
 	}
 #endif
 
 	close(fdcurr);
-	stat(stateFilename, &sb);
+	if (stat(stateFilename, &sb)) {
+		free(tmpFilename);
+		return 1;
+	}
 
 	fdsave = createOutputFile(tmpFilename, O_RDWR | O_CREAT | O_TRUNC, &sb, prev_acl, 0);
 #ifdef WITH_ACL
@@ -1906,8 +1915,10 @@ static int readState(char *stateFilename)
 	filename = strdup(argv[0]);
 	unescape(filename);
 	
-	if ((st = findState(filename)) == NULL)
+	if ((st = findState(filename)) == NULL) {
+		free(filename);
 		return 1;
+	}
 
 	st->lastRotated.tm_mon = month;
 	st->lastRotated.tm_mday = day;
